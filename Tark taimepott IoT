#define BLYNK_TEMPLATE_ID "****"
#define BLYNK_DEVICE_NAME "****"
#define BLYNK_AUTH_TOKEN "****"

#define BLYNK_PRINT Serial
#include <ESP8266_Lib.h>
#include <BlynkSimpleShieldEsp8266.h>

#include <DHT.h>
#include <Adafruit_Sensor.h>

//wifi seadistus
char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "****";
char pass[] = "****";

//Uno, Nano jaoks WIFI mooduli ühendamine
#include <SoftwareSerial.h>
SoftwareSerial EspSerial(2, 3); //RRX, TX
//Esp 8266 andmasidekiirus:
#define ESP8266_BAUD 38400
ESP8266 wifi(&EspSerial);

//pärast blyni ühenduse loomist
BLYNK_CONNECTED(){
Blynk.syncAll(); //sünkroniseerib Blynki Serveriga Viikude kõige uueamad väärtused
Blynk.syncVirtual(V9, V10, V11, V15); //üksikute virtuaalsete viikudde värskendamine
}

// Globaalsed muutujad ja viikude ühendamised
int pump_lyliti = 0;        // 0 - väljas, 1 - sees
int led_seadistus = 0;      // 0 - automaatne-, 1 - käsijuhtimine
int led_heledus_nupp = 0;   // 0 - 100 LED heleduse nupu väärtus Blynk serveris
int led_heledus = 0;        // 0 - 255 tegelik LED heleduse väärtus Uno viigul
int led_lyliti = 0;         // 0 - väljas, 1 - sees
int pumba_joud = 90;        // Voolupinge pumba jaoks hetkel toiteplokk 255 = 12V, 60 = 2.8V, 0 = OV

int loe_A0;                 // LDR  anduri väärtuse lugemine viigult
int loe_A1;                 // Veepaagi anduri väärtuse lugemine viigult 
int loe_A2;                 // Mullaniiskuse anduri väärtuse lugemine viigult 

int veepaagi_vaartus;       // Veeanduri väärtus
int mulla_vaartus;          // Mullaanduri väärtus
int valgus_vaartus;         // LDR väärtus

int vesi_Pin = 11;          // Veepaagi andurile voolu andmise viik
int muld_Pin = 5;           // Mulla andurile voolu andmine viik
int pump_Pin = 9;           // Pumba ühendamise viik 
int led_Pin = 10;           // LED tulede ühendamise viik

// DHT22 anduri ühendamise sätte
const int dhtPin = 4;     // DHT22 ühendamise viik
DHT dht(dhtPin, DHT22);   // DHT22 ühendusport ja sensoritüüp
float niiskus;            // Õhuniiskus
float temp;               // Temperatuur

// Andmete piirnormid enne konvertimist, mis omakorda aitab sensoreid kalibreerida
const int kuiv = 505;    // Kuiva oleku piirnorm mullaandurile
const int marg = 250;    // Märja oleku piirnorm mullaandurile
const int tyhi = 490;    // Tühja oleku piirnorm veeandurile
const int tais = 250;    // Täis oleku piirnorm veeandurile
const int valge = 1000;   // Valguse heleduse oleku piirnorm 
const int pime = 25;     // Valguse pimeda oleku piirnorm 


BlynkTimer timer; //Blynk andmete edastamise timer

//Blynk serverilt virtuaalsete viikkudelt andemete saatmine
BLYNK_WRITE(V9)
{
  pump_lyliti = param.asInt();
  //kui pumba nupp on sees siis...
 if(pump_lyliti == 1)
{
analogWrite(pump_Pin,pumba_joud);
delay(15);
}
else if(pump_lyliti == 0)
analogWrite(pump_Pin,0);
delay(15);
}

BLYNK_WRITE(V10)
 {
  led_seadistus = param.asInt(); // Määrab kas LEDi juhitakse automaalselt või käsitsi
 }


BLYNK_WRITE(V11)
 {
  led_heledus_nupp = param.asInt(); 

  // Kui LED seadistus ja LED lüliti on sees, siis ... 
  if ((led_seadistus == 1) && (led_lyliti == 1)) 
    {
    // Konverteerikase LED lambi heleduse viigu ja Blynk rakenduse liugurnupu väärtused vastavusse
    led_heledus =map(led_heledus_nupp, 100, 0, 255, 0); 
    analogWrite(led_Pin,led_heledus); // Toimub käsitsi jutimine liugurnupu abil
    delay(10);
    }
    // Kui LED seadistus ja LED lüliti on väljas, siis ... 
    else if ((led_seadistus == 1) && (led_lyliti == 0)) 
     {
      analogWrite(led_Pin,0); // Kustuta tuli
      delay(10);
      }   
 }

 BLYNK_WRITE(V15)
 {
  led_lyliti = param.asInt(); 
  
  // Kui LED lüliti nupp on väljas, siis kustutame tule 
  if (led_lyliti == 0) 
    {
    analogWrite(led_Pin,0);
    delay(10);
    }
 }

void setup() 
{    
  // Viikude seadistused, määratakse kas tegemist sisendi või väljudiga
  pinMode(led_Pin, OUTPUT);  // LED lamp
  pinMode(vesi_Pin, OUTPUT); // Veeanduri toide
  pinMode(muld_Pin, OUTPUT); // Mullaanduri toide
  pinMode(pump_Pin, OUTPUT); // Pump
  pinMode(A0, INPUT); // LDR väärtuste lugemine
  pinMode(A1, INPUT); // Veeanduri väärtuste lugemine
  pinMode(A2,INPUT); // Mullaanduri väärtuste lugemine
  
  dht.begin();                           // Käivitab DHT22 anduri
  Serial.begin(9600);                    // Käivitab jadapordi
  timer.setInterval(2000L, sendSensor); //määrab timeri intervalli andmate edastamaiseks
  Serial.begin(115200); //Jadapordi andmeedastus kiirus
  EspSerial.begin(ESP8266_BAUD); //seadista ESP8266 WIFI andmeedastuskiirus
  Blynk.begin(auth, wifi, ssid, pass, "blynk.cloud", 80); // Blynk serveriga ühenduse loomine
}


void sendSensor(){ 
  // DHT22 andurilt temp ja niiskuse andmete lugemine 

  niiskus = dht.readHumidity();
  temp = dht.readTemperature();

  //andmete edastamine Blynki serverile
  Blynk.virtualWrite(V3, niiskus);
  Blynk.virtualWrite(V4, temp);

  //saadud andurite väärtuste edastamine Blynk severile
  Blynk.virtualWrite(V5, veepaagi_vaartus);
  Blynk.virtualWrite(V6, mulla_vaartus);
  delay(15);
  }




void loop() {
Blynk.run(); //Käivitab Blynk teenuse
timer.run();//timeri käivitamine  

 //Veeandurilt anmete lugemine
 digitalWrite(vesi_Pin, HIGH); //lülitab toite sisse
 delay(200); //viivitab lülitusega
 loe_A1 = analogRead(A1); //loeb näidu 
 digitalWrite(vesi_Pin, LOW); //lülitab toite välja
 delay(10);

 // Mullaandurilt andmete lugemine
  digitalWrite(muld_Pin, HIGH);  // Lülitab toite sisse
  delay(100);                    // Viivitab lülituse tegemiseks
  loe_A2 = analogRead(A2);       // Loeb näidu
  digitalWrite(muld_Pin, LOW);   // Lülitab toite välja
  delay(100); 

  // Valgusandurilt (LDR) andmete lugemine 
  loe_A0 = analogRead(A0);       //Loeb näidu
  delay(100);
   
  
  // Saadud andurite väärtuste konverteerimine/kalibreerimine 
  veepaagi_vaartus =map(loe_A1, tais, tyhi, 100, 0);
  mulla_vaartus =map(loe_A2, marg, kuiv, 100, 0);
  valgus_vaartus =map(loe_A0, valge, pime, 100, 0);  
  


//järelkontroll kui arvud lähevad 0 ja 100 piiridest välja
  if (mulla_vaartus > 100)
   {
      mulla_vaartus = 100;
    }   
    else if (mulla_vaartus < 0)
      {
      mulla_vaartus = 0;
      }
      
   if (veepaagi_vaartus > 100)
   {
      veepaagi_vaartus = 100;
    }   
    else if (veepaagi_vaartus < 0)
      {
      veepaagi_vaartus = 0;
      }
  //saadud LDR anduri väärtuste edastamine Blynk serverisse
  Blynk.virtualWrite(V7, valgus_vaartus);
  delay(15);

  /*
  Serial.print(temp);
  Serial.print("C / ");   
  Serial.print(niiskus);
  Serial.print("% / paak = "); 
  Serial.print(loe_A1);
  Serial.print(" / muld = ");   
  Serial.print(loe_A2); 
  Serial.print(" / paak V = ");  
  Serial.print(veepaagi_vaartus);
  Serial.print(" / muld V = ");   
  Serial.print(mulla_vaartus); 
  Serial.print(" / LDR = ");
  Serial.print(loe_A0);
  Serial.print(" Heledus = ");
  Serial.print(led_heledus);
  Serial.println(" \n"); */ 

  
  // Kui muld on kuiv ja vett jagub või kui vett jagub ja pumba lüliti sees, siis 
if ((mulla_vaartus <= 45) && (veepaagi_vaartus > 5) or (veepaagi_vaartus > 5)&&(pump_lyliti == 1))
{
  Blynk.virtualWrite(V9,1); // Lülita blynk'is V9 viiguga ühendatud lüliti sisse
  delay(15);
  analogWrite(pump_Pin, pumba_joud); // Lülita pump sisse, võimsusega V
  delay(10);
}
// Kui muld märg või vesi otsas või pumba lüliti väljas, siis
else if((mulla_vaartus > 45) or (veepaagi_vaartus <= 5) or (pump_lyliti == 0))
{
Blynk.virtualWrite(V9,0); // Lülita V9 viiguga ühendatud lüliti välja
delay(15);

analogWrite(pump_Pin,0);// Lülita pump välja
delay(10);
}
//valgustuse automaatne juhtimine vastavalt heledusele
// Kui päevavalgust väga vähe ja led seadistus auto sättes ja led lüliti sees, siis
  if ((valgus_vaartus<=35) && (led_seadistus == 0) && (led_lyliti == 1))
   {
    analogWrite(led_Pin,255); // Lülita LED 100% võimsusega sisse
    delay(10);
   }  
      // Või kui päevavalgust vähe ja led seadistus auto sättes ja led lüliti sees, siis 
      else if ((valgus_vaartus<=70) && (led_seadistus == 0) && (led_lyliti == 1))
      {
      analogWrite(led_Pin,192); // Lülita LED 75% võimsusega sisse 
      delay(10);
      }
        // Või kui päevavalgust mõõdukalt ja led seadistus auto sättes ja led lüliti sees, siis 
        else if ((valgus_vaartus<=85) && (led_seadistus == 0 && (led_lyliti == 1)))
        {
        analogWrite(led_Pin,126); // Lülitab LEDi 50% võimsuselt sisse  
        delay(10);
        } 
          // Või kui päevavalgust palju ja led seadistus auto sättes ja led lüliti sees, siis 
          else if((valgus_vaartus > 85) && (led_seadistus == 0) && (led_lyliti == 1))
          {
          analogWrite(led_Pin,0); // Lülita LED välja
          delay(10);
          }
            // Või kui led seadistus auto sättes ja led lüliti väljas, siis 
            else if ((led_seadistus == 0) && (led_lyliti == 0))
            {
            analogWrite(led_Pin,0); // Lülita LED välja
            delay(10);
            }
              // Või kui led seadistus käsitsi sättes ja led lüliti sees, siis 
              else if ((led_seadistus == 1) && (led_lyliti == 1))
              {
              analogWrite(led_Pin,led_heledus); // Toimub valguse käsitsi jutimine ligurnupu abil
              delay(10);
              }



// Kui veepaak on tühi, siis....
if (veepaagi_vaartus <= 5)
{
// Blynk.virtualWrite(V14, 1); // Lülita V14 viiguga ühendatud virtuaalse LEDi sisse
analogWrite(led_Pin, 255); // Lülita LED sisse
delay(100);
// Blynk.virtualWrite(V14, 0); // Lülita V14 viiguga ühendatud virtuaalse LEDi välja
analogWrite(led_Pin, 0); // Lülita LED välja
Blynk.virtualWrite(V9, 0); // Lülita V9 viiguga ühendatud lüliti välja
analogWrite(pump_Pin, 0); // Lülita pump välja
delay(100);
}
}
   
